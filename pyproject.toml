[project]
name = "YapLogger"
authors = [
  { email = "thiago@thir.info" },
  { name = "Thiago Dias" }
]
version = "0.1.2"
description = """
This project aims to provide a centralized logging solution for projects with multiple steps and workflows.

It facilitates tracing by identifying processes throughout their execution using a unique execution ID.
Logging during the process should help the engineering team debug issues.
Additionally, it is crucial for ensuring business outcomes by analyzing system behavior.
"""
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Typing :: Typed",
]
requires-python = ">=3.12"
dependencies = [
    "setuptools>=75.6.0",
    "wheel>=0.45.1",
    "loguru>=0.7.2",
    "types-setuptools>=75.6.0.20241126",
]

[tool.uv]
dev-dependencies = [
    "black==24.10.0",
    "pyright>=1.1.388",
    "pytest==8.3.3",
    "ruff==0.7.1",
    "typos==1.26.8",
    "pre-commit>=4.0.1",
]

[tool.ruff]
src = ["yaplogger"]
line-length = 120
show-fixes = true
unsafe-fixes = true
exclude = [
    "**/__pycache__",
    "**/tests",
    "./examples/**/*",
    "./typings",
    "./setup.py",
    "**/decorators.py"
]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["COM812", "ISC001", "TCH001", "G002", "G004", "C408", "S101"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pycodestyle]
max-doc-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10

[tool.pyright]
include = ["yaplogger"]
exclude = [
    "**/__pycache__",
    "**/tests",
    "./examples/**/*",
    "./typings",
    "./setup.py",
    "**/decorators.py"
]
typeCheckingMode = "strict"
reportMissingTypeStubs = true
reportUnknownParameterType = true
reportUnknownArgumentType = true
reportUnknownLambdaType = true
reportUnknownVariableType = true
reportUnknownMemberType = true
reportMissingTypeArgument = true
reportInvalidTypeVarUse = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryContains = true
reportCallInDefaultInitializer = true
reportPropertyTypeMismatch = true
reportWildcardImportFromLibrary = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportUntypedBaseClass = true
useLibraryCodeForTypes = true
venvPath = "."
venv = ".venv"
applyFixes = true

[tool.black]
line-length = 120
target-version = ['py312']

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = true
relative-imports-order = "closest-to-furthest"
force-single-line = false
force-wrap-aliases = false
